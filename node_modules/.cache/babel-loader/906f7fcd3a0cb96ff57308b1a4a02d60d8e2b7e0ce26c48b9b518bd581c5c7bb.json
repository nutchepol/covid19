{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default {\n  props: ['data', 'selectedDate'],\n  components: {\n    Line\n  },\n  data() {\n    return {\n      data1: {\n        labels: this.data.map(item => item.country),\n        datasets: [{\n          label: 'Cases',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: this.data.map(item => item.timeline.cases[this.selectedDate])\n        }, {\n          label: 'Deaths',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)',\n          data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n        }, {\n          label: 'Recovered',\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          borderColor: 'rgb(255, 206, 86)',\n          data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n        }]\n      },\n      options: {\n        responsive: true\n        // maintainAspectRatio: false\n      }\n    };\n  },\n\n  watch: {\n    selectedDate: function () {\n      console.log(this.selectedDate, this.data1.datasets);\n      this.data1.labels = this.data.map(item => item.country), this.data1.datasets = [{\n        label: 'Cases',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: this.data.map(item => item.timeline.cases[this.selectedDate])\n      }, {\n        label: 'Deaths',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgb(54, 162, 235)',\n        data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n      }, {\n        label: 'Recovered',\n        backgroundColor: 'rgba(255, 206, 86, 0.2)',\n        borderColor: 'rgb(255, 206, 86)',\n        data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n      }];\n    }\n  }\n};","map":{"version":3,"names":["Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","props","components","data","data1","labels","map","item","country","datasets","label","backgroundColor","borderColor","timeline","cases","selectedDate","deaths","recovered","options","responsive","watch","console","log"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <Line id=\"Line\" :data=\"data1\" :options='options' />\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: ['data', 'selectedDate'],\n    components: {\n        Line\n    },\n\n    data() {\n        return {\n            data1: {\n                labels: this.data.map(item => item.country),\n                datasets: [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                }]\n            },\n            options: {\n                responsive: true,\n                // maintainAspectRatio: false\n            }\n\n        }\n    },\n    watch: {\n        selectedDate: function () {\n            console.log(this.selectedDate, this.data1.datasets);\n\n            this.data1.labels = this.data.map(item => item.country),\n                this.data1.datasets = [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                }]\n\n\n        }\n    }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}