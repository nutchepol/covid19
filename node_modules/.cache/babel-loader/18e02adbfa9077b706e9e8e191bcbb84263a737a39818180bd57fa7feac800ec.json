{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default {\n  props: ['selectedDate'],\n  components: {\n    Line\n  },\n  data() {\n    return {\n      data: {\n        labels: this.labels,\n        datasets: [{\n          label: 'Cases',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: this.data.map(item => item.cases[this.selectedDate])\n        }, {\n          label: 'Deaths',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)',\n          data: this.data.map(item => item.deaths[this.selectedDate])\n        }, {\n          label: 'Recovered',\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          borderColor: 'rgb(255, 206, 86)',\n          data: this.data.map(item => item.recovered[this.selectedDate])\n        }]\n      },\n      options: {\n        responsive: true\n        // maintainAspectRatio: false,\n        // scales: {\n        //     yAxes: [{\n        //         ticks: {\n        //             beginAtZero: true\n        //         }\n        //     }]\n        // }\n      }\n    };\n  },\n\n  methods: {\n    getData() {\n      axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=31').then(response => {\n        this.data = response.data;\n        this.loading = false;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","props","components","data","labels","datasets","label","backgroundColor","borderColor","map","item","cases","selectedDate","deaths","recovered","options","responsive","methods","getData","get","then","response","loading","catch","error","console","log"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <Line :data=\"data\" :options='options' />\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport axios from 'axios';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: ['selectedDate'],\n    components: {\n        Line\n    },\n    data() {\n        return {\n            data: {\n                labels: this.labels,\n                datasets: [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.recovered[this.selectedDate])\n                }]\n            },\n            options: {\n                responsive: true,\n                // maintainAspectRatio: false,\n                // scales: {\n                //     yAxes: [{\n                //         ticks: {\n                //             beginAtZero: true\n                //         }\n                //     }]\n                // }\n\n            }\n        }\n    },\n    methods: {\n        getData() {\n            axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=31')\n                .then(response => {\n                    this.data = response.data;\n                    this.loading = false;\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n    }\n}\n</script>\n"],"mappings":"AAQA,SAASA,IAAG,QAAS,aAAa;AAClC,OAAOC,KAAI,MAAO,OAAO;AAEzB,SACIC,KAAI,IAAKC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,QACF,UAAS;AAChBP,OAAO,CAACQ,QAAQ,CACZP,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,CACT;AACA,eAAe;EACXE,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,UAAU,EAAE;IACRb;EACJ,CAAC;EACDc,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE;QACFC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,OAAO;UACdC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCL,IAAI,EAAE,IAAI,CAACA,IAAI,CAACM,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;QAC7D,CAAC,EAAE;UACCN,KAAK,EAAE,QAAQ;UACfC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCL,IAAI,EAAE,IAAI,CAACA,IAAI,CAACM,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACG,MAAM,CAAC,IAAI,CAACD,YAAY,CAAC;QAC9D,CAAC,EAAE;UACCN,KAAK,EAAE,WAAW;UAClBC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCL,IAAI,EAAE,IAAI,CAACA,IAAI,CAACM,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACI,SAAS,CAAC,IAAI,CAACF,YAAY,CAAC;QACjE,CAAC;MACL,CAAC;MACDG,OAAO,EAAE;QACLC,UAAU,EAAE;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAEJ;IACJ;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACN5B,KAAK,CAAC6B,GAAG,CAAC,2DAA2D,EAChEC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAAClB,IAAG,GAAIkB,QAAQ,CAAClB,IAAI;QACzB,IAAI,CAACmB,OAAM,GAAI,KAAK;MACxB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}