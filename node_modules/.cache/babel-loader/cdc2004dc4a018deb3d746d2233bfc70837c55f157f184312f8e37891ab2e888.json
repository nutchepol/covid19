{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Cases by Country\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_Line, {\n    data: $data.data1,\n    options: $data.options\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Line","data","$data","data1","options"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <Line :data=\"data1\" :options='options' />\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport axios from 'axios';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: ['selectedDate'],\n    components: {\n        Line\n    },\n    data() {\n        return {\n            data1: {\n                data: this.getData(),\n                labels: this.selectedDate,\n                datasets: [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.recovered[this.selectedDate])\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false\n            }\n\n        }\n    },\n    methods: {\n        getData() {\n            axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=31')\n                .then(response => {\n                    this.data = response.data;\n                    this.loading = false;\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n    }\n}\n</script>\n"],"mappings":";gCAEQA,mBAAA,CAAyB,YAArB,kBAAgB;;;;uBADxBC,mBAAA,CAGM,cAFFC,UAAyB,EACzBC,YAAA,CAAyCC,eAAA;IAAlCC,IAAI,EAAEC,KAAA,CAAAC,KAAK;IAAGC,OAAO,EAAEF,KAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}