{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"COVID-19 Cases by Country\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date\"\n}, \"Select date:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Country\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Cases\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Deaths\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Recovered\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.showDate = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.updateData && $options.updateData(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.showDate]]), _createElementVNode(\"p\", null, \"Selected Date: \" + _toDisplayString($data.selectedDate), 1 /* TEXT */)]), _createTextVNode(\" \" + _toDisplayString($data.selectedDate) + \" \", 1 /* TEXT */), _createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.country\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.country), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.timeline.cases[$data.selectedDate]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.timeline.deaths[$data.selectedDate]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.timeline.recovered[$data.selectedDate]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]))]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","$data","loading","_hoisted_2","_hoisted_3","_hoisted_4","type","id","showDate","$event","onChange","_cache","args","$options","updateData","_toDisplayString","selectedDate","_hoisted_5","_Fragment","_renderList","data","item","key","country","timeline","cases","deaths","recovered"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/DataDisplay.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>COVID-19 Cases by Country</h1>\n        <div v-if=\"loading\">Loading...</div>\n        <div v-else>\n            <div>\n                <label for=\"date\">Select date:</label>\n                <input type=\"date\" id=\"date\" v-model=\"showDate\" @change=\"updateData\" />\n                <p>Selected Date: {{ selectedDate }}</p>\n            </div>\n            {{ selectedDate }}\n            <table>\n                <thead>\n                    <tr>\n                        <th>Country</th>\n                        <th>Cases</th>\n                        <th>Deaths</th>\n                        <th>Recovered</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"item in data\" :key=\"item.country\">\n                        <td>{{ item.country }}</td>\n                        <td>{{ item.timeline.cases[selectedDate] }}</td>\n                        <td>{{ item.timeline.deaths[selectedDate] }}</td>\n                        <td>{{ item.timeline.recovered[selectedDate] }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\n\nexport default {\n    name: 'DataDisplay',\n    data() {\n        return {\n            data: [],\n            loading: true,\n            selectedDate: '',\n            showDate: '',\n        }\n    },\n    mounted() {\n        this.getData();\n        this.showDate = moment(this.selectedDate, 'M/D/YY').format('YYYY-MM-DD');\n    },\n    methods: {\n        getData() {\n            axios.get('https://disease.sh/v3/covid-19/historical?lastdays=31')\n                .then(response => {\n                    this.data = response.data;\n                    this.selectedDate = Object.keys(this.data[0].timeline.cases)[Object.keys(this.data[0].timeline.cases).length - 1];\n                    console.log(this.data, this.selectedDate)\n                    this.loading = false;\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n        updateData() {\n            this.selectedDate = moment(this.showDate).format('M/D/YY');\n            console.log(this.selectedDate);\n            // this.selectedDate = Object.keys(this.data[0].timeline.cases)[Object.keys(this.data[0].timeline.cases).length - 1];\n        }\n    }\n}\n</script>\n\n\n"],"mappings":";gCAEQA,mBAAA,CAAkC,YAA9B,2BAAyB;;;;;;;gCAIrBA,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAM,GAAC,cAAY;gCAM9BD,mBAAA,CAOQ,gB,aANJA,mBAAA,CAKK,a,aAJDA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAkB,YAAd,WAAS,E;;;uBAhBjCE,mBAAA,CA6BM,cA5BFC,UAAkC,EACvBC,KAAA,CAAAC,OAAO,I,cAAlBH,mBAAA,CAAoC,OAAAI,UAAA,EAAhB,YAAU,M,cAC9BJ,mBAAA,CAyBM,OAAAK,UAAA,GAxBFP,mBAAA,CAIM,cAHFQ,UAAsC,E,gBACtCR,mBAAA,CAAuE;IAAhES,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;+DAAUN,KAAA,CAAAO,QAAQ,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;iEAA7BX,KAAA,CAAAO,QAAQ,E,GAC9CX,mBAAA,CAAwC,WAArC,iBAAe,GAAAkB,gBAAA,CAAGd,KAAA,CAAAe,YAAY,iB,oBAC/B,GACN,GAAAD,gBAAA,CAAGd,KAAA,CAAAe,YAAY,IAAG,GAClB,iBAAAnB,mBAAA,CAiBQ,gBAhBJoB,UAOQ,EACRpB,mBAAA,CAOQ,iB,kBANJE,mBAAA,CAKKmB,SAAA,QAAAC,WAAA,CALclB,KAAA,CAAAmB,IAAI,EAAZC,IAAI;yBAAftB,mBAAA,CAKK;MALqBuB,GAAG,EAAED,IAAI,CAACE;QAChC1B,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBM,IAAI,CAACE,OAAO,kBACnB1B,mBAAA,CAAgD,YAAAkB,gBAAA,CAAzCM,IAAI,CAACG,QAAQ,CAACC,KAAK,CAACxB,KAAA,CAAAe,YAAY,mBACvCnB,mBAAA,CAAiD,YAAAkB,gBAAA,CAA1CM,IAAI,CAACG,QAAQ,CAACE,MAAM,CAACzB,KAAA,CAAAe,YAAY,mBACxCnB,mBAAA,CAAoD,YAAAkB,gBAAA,CAA7CM,IAAI,CAACG,QAAQ,CAACG,SAAS,CAAC1B,KAAA,CAAAe,YAAY,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}