{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nimport ChartCountry from './ChartCountry';\nexport default {\n  name: 'DataDisplay',\n  components: {\n    ChartCountry\n  },\n  data() {\n    return {\n      data: [],\n      loading: true,\n      selectedDate: '',\n      showDate: ''\n    };\n  },\n  mounted() {\n    this.getData();\n    this.showDate = moment(this.selectedDate, 'M/D/YY').format('YYYY-MM-DD');\n  },\n  methods: {\n    getData() {\n      axios.get('https://disease.sh/v3/covid-19/historical?lastdays=31').then(response => {\n        this.data = response.data;\n        this.selectedDate = Object.keys(this.data[0].timeline.cases)[Object.keys(this.data[0].timeline.cases).length - 1];\n        this.loading = false;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    updateData() {\n      this.selectedDate = moment(this.showDate).format('M/D/YY');\n    }\n  }\n};","map":{"version":3,"names":["axios","moment","ChartCountry","name","components","data","loading","selectedDate","showDate","mounted","getData","format","methods","get","then","response","Object","keys","timeline","cases","length","catch","error","console","log","updateData"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/DataDisplay.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>COVID-19 Dashboard</h1>\n        <div v-if=\"loading\">Loading...</div>\n        <div v-else>\n            <div>\n                <label for=\"date\">Select date:</label>\n                <input type=\"date\" id=\"date\" v-model=\"showDate\" @change=\"updateData\" />\n            </div>\n            <ChartCountry :data=\"data\" :selectedDate=\"selectedDate\" />\n            <div class=\"table-container\">\n                <table class='\"styled-table\"'>\n                    <thead>\n                        <tr>\n                            <th>Country</th>\n                            <th>Cases</th>\n                            <th>Deaths</th>\n                            <th>Recovered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"item in data\" :key=\"item.country\">\n                            <td>{{ item.country }}</td>\n                            <td>{{ item.timeline.cases[selectedDate] }}</td>\n                            <td>{{ item.timeline.deaths[selectedDate] }}</td>\n                            <td>{{ item.timeline.recovered[selectedDate] }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport moment from 'moment';\nimport ChartCountry from './ChartCountry';\nexport default {\n    name: 'DataDisplay',\n    components: {\n        ChartCountry\n    },\n    data() {\n        return {\n            data: [],\n            loading: true,\n            selectedDate: '',\n            showDate: '',\n        }\n    },\n    mounted() {\n        this.getData();\n        this.showDate = moment(this.selectedDate, 'M/D/YY').format('YYYY-MM-DD');\n    },\n    methods: {\n        getData() {\n            axios.get('https://disease.sh/v3/covid-19/historical?lastdays=31')\n                .then(response => {\n                    this.data = response.data;\n                    this.selectedDate = Object.keys(this.data[0].timeline.cases)[Object.keys(this.data[0].timeline.cases).length - 1];\n                    this.loading = false;\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        },\n        updateData() {\n            this.selectedDate = moment(this.showDate).format('M/D/YY');\n        }\n    }\n}\n</script>\n<style>\n.styled-table {\n    border-collapse: collapse;\n    border: 1px solid rgb(0, 0, 0);\n    /* add a border */\n    width: 80%;\n    max-width: 800px;\n    background-color: #f8f8f8;\n    font-size: 18px;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    align-items: center;\n    ;\n}\n\n.styled-table th {\n    background-color: #333;\n    color: #fff;\n    font-weight: bold;\n}\n\n.styled-table th,\n.styled-table td {\n    padding: 12px 15px;\n}\n\n.styled-table tbody tr:nth-of-type(even) {\n    background-color: #f2f2f2;\n}\n\n.styled-table tbody tr:hover {\n    background-color: #ddd;\n}\n</style>"],"mappings":"AAmCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,QAAQ;AAC3B,OAAOC,YAAW,MAAO,gBAAgB;AACzC,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACF,QAAO,GAAIP,MAAM,CAAC,IAAI,CAACM,YAAY,EAAE,QAAQ,CAAC,CAACI,MAAM,CAAC,YAAY,CAAC;EAC5E,CAAC;EACDC,OAAO,EAAE;IACLF,OAAOA,CAAA,EAAG;MACNV,KAAK,CAACa,GAAG,CAAC,uDAAuD,EAC5DC,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACV,IAAG,GAAIU,QAAQ,CAACV,IAAI;QACzB,IAAI,CAACE,YAAW,GAAIS,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACa,QAAQ,CAACC,KAAK,CAAC,CAACH,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACa,QAAQ,CAACC,KAAK,CAAC,CAACC,MAAK,GAAI,CAAC,CAAC;QACjH,IAAI,CAACd,OAAM,GAAI,KAAK;MACxB,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV,CAAC;IACDG,UAAUA,CAAA,EAAG;MACT,IAAI,CAAClB,YAAW,GAAIN,MAAM,CAAC,IAAI,CAACO,QAAQ,CAAC,CAACG,MAAM,CAAC,QAAQ,CAAC;IAC9D;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}