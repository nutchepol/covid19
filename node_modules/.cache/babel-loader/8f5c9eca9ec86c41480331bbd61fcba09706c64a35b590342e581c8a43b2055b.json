{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default {\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    selectedDate: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    Line\n  },\n  data() {\n    return {\n      chartData: null,\n      chartOptions: {\n        responsive: true\n      }\n    };\n  },\n  mounted() {\n    this.updateChartData();\n  },\n  watch: {\n    selectedDate() {\n      this.updateChartData();\n    }\n  },\n  methods: {\n    updateChartData() {\n      this.chartData = {\n        labels: this.data.map(item => item.country),\n        datasets: [{\n          label: 'Cases',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          data: this.data.map(item => item.timeline.cases[this.selectedDate])\n        }, {\n          label: 'Deaths',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)',\n          data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n        }, {\n          label: 'Recovered',\n          backgroundColor: 'rgba(255, 206, 86, 0.2)',\n          borderColor: 'rgb(255, 206, 86)',\n          data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n        }]\n      };\n    }\n  }\n};","map":{"version":3,"names":["Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","props","data","type","Array","required","selectedDate","String","components","chartData","chartOptions","responsive","mounted","updateChartData","watch","methods","labels","map","item","country","datasets","label","backgroundColor","borderColor","timeline","cases","deaths","recovered"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <Line :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: {\n        data: {\n            type: Array,\n            required: true\n        },\n        selectedDate: {\n            type: String,\n            required: true\n        }\n    },\n    components: {\n        Line\n    },\n    data() {\n        return {\n            chartData: null,\n            chartOptions: {\n                responsive: true,\n            }\n        }\n    },\n    mounted() {\n        this.updateChartData();\n    },\n    watch: {\n        selectedDate() {\n            this.updateChartData();\n        }\n    },\n    methods: {\n        updateChartData() {\n            this.chartData = {\n                labels: this.data.map(item => item.country),\n                datasets: [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                }]\n            }\n        }\n    }\n}\n</script>\n"],"mappings":"AAQA,SAASA,IAAG,QAAS,aAAa;AAClC,SACIC,KAAI,IAAKC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,QACF,UAAS;AAChBP,OAAO,CAACQ,QAAQ,CACZP,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAK,CACT;AACA,eAAe;EACXE,KAAK,EAAE;IACHC,IAAI,EAAE;MACFC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd,CAAC;IACDC,YAAY,EAAE;MACVH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACd;EACJ,CAAC;EACDG,UAAU,EAAE;IACRlB;EACJ,CAAC;EACDY,IAAIA,CAAA,EAAG;IACH,OAAO;MACHO,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;QACVC,UAAU,EAAE;MAChB;IACJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,eAAe,EAAE;EAC1B,CAAC;EACDC,KAAK,EAAE;IACHR,YAAYA,CAAA,EAAG;MACX,IAAI,CAACO,eAAe,EAAE;IAC1B;EACJ,CAAC;EACDE,OAAO,EAAE;IACLF,eAAeA,CAAA,EAAG;MACd,IAAI,CAACJ,SAAQ,GAAI;QACbO,MAAM,EAAE,IAAI,CAACd,IAAI,CAACe,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,OAAO,CAAC;QAC3CC,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,OAAO;UACdC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCrB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACe,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACM,QAAQ,CAACC,KAAK,CAAC,IAAI,CAACnB,YAAY,CAAC;QACtE,CAAC,EAAE;UACCe,KAAK,EAAE,QAAQ;UACfC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCrB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACe,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACM,QAAQ,CAACE,MAAM,CAAC,IAAI,CAACpB,YAAY,CAAC;QACvE,CAAC,EAAE;UACCe,KAAK,EAAE,WAAW;UAClBC,eAAe,EAAE,yBAAyB;UAC1CC,WAAW,EAAE,mBAAmB;UAChCrB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACe,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACM,QAAQ,CAACG,SAAS,CAAC,IAAI,CAACrB,YAAY,CAAC;QAC1E,CAAC;MACL;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}