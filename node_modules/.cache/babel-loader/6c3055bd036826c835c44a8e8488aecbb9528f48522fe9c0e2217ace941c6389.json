{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default {\n  props: ['data', 'selectedDate'],\n  components: {\n    Line\n  },\n  data() {\n    return {\n      chart: null,\n      data1: {\n        type: 'line',\n        data: {\n          labels: this.data.map(item => item.country),\n          datasets: [{\n            label: 'Cases',\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            data: this.data.map(item => item.timeline.cases[this.selectedDate])\n          }, {\n            label: 'Deaths',\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgb(54, 162, 235)',\n            data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n          }, {\n            label: 'Recovered',\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\n            borderColor: 'rgb(255, 206, 86)',\n            data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n          }]\n        },\n        options: {\n          responsive: true\n        }\n      }\n    };\n  },\n  mounted() {\n    let ctx = document.getElementById('myChart').getContext('2d');\n    this.forecastChart = new Chart(ctx, {\n      data1\n    });\n  },\n  watch: {\n    selectedDate: function () {\n      console.log('fsddfdsf', this.selectedDate, this.chart);\n      this.data1.labels = this.data.map(item => item.country), this.data1.datasets = [{\n        label: 'Cases',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: this.data.map(item => item.timeline.cases[this.selectedDate])\n      }, {\n        label: 'Deaths',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgb(54, 162, 235)',\n        data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n      }, {\n        label: 'Recovered',\n        backgroundColor: 'rgba(255, 206, 86, 0.2)',\n        borderColor: 'rgb(255, 206, 86)',\n        data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n      }];\n      this.forecastChart.update();\n    }\n  },\n  method() {}\n};","map":{"version":3,"names":["Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","props","components","data","chart","data1","type","labels","map","item","country","datasets","label","backgroundColor","borderColor","timeline","cases","selectedDate","deaths","recovered","options","responsive","mounted","ctx","document","getElementById","getContext","forecastChart","watch","console","log","update","method"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <!-- <Line :data=\"data1\" :options='options' id='chart' /> -->\n        <canvas id=\"myChart\"></canvas>\n\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: ['data', 'selectedDate'],\n    components: {\n        Line\n    },\n\n    data() {\n        return {\n            chart: null,\n            data1:\n            {\n                type: 'line',\n                data: {\n                    labels: this.data.map(item => item.country),\n                    datasets: [{\n                        label: 'Cases',\n                        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                        borderColor: 'rgb(255, 99, 132)',\n                        data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                    }, {\n                        label: 'Deaths',\n                        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                        borderColor: 'rgb(54, 162, 235)',\n                        data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                    }, {\n                        label: 'Recovered',\n                        backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                        borderColor: 'rgb(255, 206, 86)',\n                        data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                    }]\n                },\n                options: {\n                    responsive: true,\n                }\n            }\n\n        }\n    },\n    mounted() {\n        let ctx = document.getElementById('myChart').getContext('2d');\n        this.forecastChart = new Chart(ctx, { data1 })\n    },\n    watch: {\n        selectedDate: function () {\n            console.log('fsddfdsf', this.selectedDate, this.chart);\n\n            this.data1.labels = this.data.map(item => item.country),\n                this.data1.datasets = [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                }]\n\n            this.forecastChart.update()\n\n\n        }\n    },\n    method() {\n\n\n    }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}