{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Cases by Country\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_Line, {\n    data: $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Line","data","$data","chartData","options","chartOptions"],"sources":["/Users/kgreat/work/KU_project/Vue-covid/visualize-covid19/src/components/ChartCountry.vue"],"sourcesContent":["<template>\n    <div>\n        <h2>Cases by Country</h2>\n        <Line :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js'\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n)\nexport default {\n    props: {\n        data: {\n            type: Array,\n            required: true\n        },\n        selectedDate: {\n            type: String,\n            required: true\n        }\n    },\n    components: {\n        Line\n    },\n    data() {\n        return {\n            chartData: null,\n            chartOptions: {\n                responsive: true,\n                maintainAspectRatio: false\n            }\n        }\n    },\n    mounted() {\n        this.updateChartData();\n    },\n    watch: {\n        selectedDate() {\n            this.updateChartData();\n        }\n    },\n    methods: {\n        updateChartData() {\n            this.chartData = {\n                labels: this.data.map(item => item.country),\n                datasets: [{\n                    label: 'Cases',\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: this.data.map(item => item.timeline.cases[this.selectedDate])\n                }, {\n                    label: 'Deaths',\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    data: this.data.map(item => item.timeline.deaths[this.selectedDate])\n                }, {\n                    label: 'Recovered',\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)',\n                    borderColor: 'rgb(255, 206, 86)',\n                    data: this.data.map(item => item.timeline.recovered[this.selectedDate])\n                }]\n            }\n        }\n    }\n}\n</script>\n"],"mappings":";gCAEQA,mBAAA,CAAyB,YAArB,kBAAgB;;;;uBADxBC,mBAAA,CAGM,cAFFC,UAAyB,EACzBC,YAAA,CAAkDC,eAAA;IAA3CC,IAAI,EAAEC,KAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,KAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}